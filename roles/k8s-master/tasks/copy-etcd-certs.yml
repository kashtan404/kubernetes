---

- name: Make sure Kubernetes apiserver etcd certs dir exists
  file:
   state: directory
   path: "{{ apiserver_etcd_certs_dir }}"
   mode: 0700
   owner: kube
   group: kube

- name: Slurp etcd CA certificate
  slurp:
    src: "{{ etcd_ca_file }}"
  register: etcd_ca_slurp
  run_once: true
  delegate_to: "{{ groups[k8s_hostgroup][0] }}"

- name: Register CA certificate as a fact
  set_fact:
    etcd_ca_cert: "{{ etcd_ca_slurp.content|b64decode }}"
  when: etcd_ca_cert is not defined

- name: Slurp etcd client certificate
  slurp:
    src: "{{ etcd_client_cert_file }}"
  register: etcd_cli_cert_slurp
  run_once: true
  delegate_to: "{{ groups[k8s_hostgroup][0] }}"

- name: Register client certificate as a fact
  set_fact:
    etcd_client_cert: "{{ etcd_cli_cert_slurp.content|b64decode }}"
  when: etcd_client_cert is not defined

- name: Slurp etcd client key
  slurp:
    src: "{{ etcd_client_key_file }}"
  register: etcd_cli_key_slurp
  run_once: true
  delegate_to: "{{ groups[k8s_hostgroup][0] }}"

- name: Register etcd client key as a fact
  set_fact:
    etcd_client_key: "{{ etcd_cli_key_slurp.content|b64decode }}"
  when: etcd_client_key is not defined

- name: Copy etcd certificates to master servers
  copy:
    content: "{{ item[1] }}"
    dest: "{{ item[0] }}"
    group: kube
    owner: kube
    mode: "0440"
  with_together:
    - [ "{{ apiserver_etcd_ca_file }}", "{{ apiserver_etcd_cert_file }}", "{{ apiserver_etcd_key_file }}" ]
    - [ "{{ etcd_ca_cert }}", "{{ etcd_client_cert }}", "{{ etcd_client_key }}" ]
