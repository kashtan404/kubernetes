---

- name: Create kubernetes script directory
  file:
    path: "{{ kube_script_dir }}"
    state: directory
    owner: root
    group: root
  delegate_to: "{{ groups[k8s_hostgroup][0] }}"
  run_once: true

- name: Copy the token gen script
  copy:
    src: make-ca-cert.sh
    dest: "{{ kube_script_dir }}"
    mode: u+x
  delegate_to: "{{ groups[k8s_hostgroup][0] }}"
  run_once: true

- name: Run create cert script on master
  command: "{{ kube_script_dir }}/make-ca-cert.sh"
  args:
    creates: "{{ kube_cert_dir }}/server.crt"
  run_once: true
  environment:
    MASTER_IP: "{% for host in groups[k8s_hostgroup] %}{{ hostvars[host]['kube_cert_ip']  }}{% if not loop.last %},{% endif %}{% endfor %}"
    MASTERS: "{{ groups[k8s_hostgroup]|join(',') }}"
    DNS_DOMAIN: "{{ dns_domain }}"
    SERVICE_CLUSTER_IP_RANGE: "{{ kube_service_addresses }}"
    CERT_DIR: "{{ kube_cert_dir }}"
    CERT_GROUP: "kube"
    HTTP_PROXY: "{{ http_proxy|default('') }}"
    HTTPS_PROXY: "{{ https_proxy|default('') }}"
    CLUSTER_HOSTNAME: "{{ master_cluster_hostname|default('') }}"
    CLUSTER_PUBLIC_HOSTNAME: "{{ master_cluster_public_hostname|default('') }}"
    KUBE_CERT_KEEP_CA: "{{ kube_cert_keep_ca | default(true) | lower }}"
    KUBE_KUBELET_ALT_NAMES: "{% for host in groups[k8s_hostgroup_node] %}DNS:{{ host }}{% if not loop.last %},{% endif %}{% endfor %}"

- name: Verify certificate permissions
  file:
    path: "{{ item }}"
    group: kube
    owner: kube
    mode: 0440
  with_items:
    - "{{ kube_cert_dir }}/ca.crt"
    - "{{ kube_cert_dir }}/server.crt"
    - "{{ kube_cert_dir }}/server.key"
    - "{{ kube_cert_dir }}/kubecfg.crt"
    - "{{ kube_cert_dir }}/kubecfg.key"
  delegate_to: "{{ groups[k8s_hostgroup][0] }}"
